init_x(n, x, p) 
[ <#n: int, x: int, p: int ref> -> 
  <#n: int, x: int, p: int ref | int> ]
{
  if n <= 0 then {
    1
  } else {
    p := x;
    let q = p + 1 in
    let m = n - 1 in
    let d = init_x(m, x, q) in
    alias(q = p + 1);
    1
  }
}

{
  let p = mkarray 3 in
  p := 0;
  let q = p + 1 in
  q := 0;
  let r = q + 1 in
  r := 0;
  alias(r = q + 1);
  alias(q = p + 1);
  let m = 2 in
  let x = 1 in
  let p1 = p in
  let d = init_x(m, x, p) in
  alias(p1 = p);
  let pp = *p in
  assert(pp = 1);
  alias(q = p + 1);
  let qq = *q in
  assert(qq = 1);
  alias(r = q + 1);
  let rr = *r in
  assert(rr = 0);
  ()
}
